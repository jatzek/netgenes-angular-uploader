!function(angular){angular.module("netgenes.$ngUploader",[]).factory("$ngFileChooser",function(){function NgFileChooser(){}return NgFileChooser.prototype={defaults:{multiple:!1,accept:null,callback:angular.noop},open:function(providedConfig){var defaults=this.defaults;return new Promise(function(resolve){var fileInput,config,clickEvent,changeHandler;changeHandler=function(changeEvent){var files;files=changeEvent.target.files,config.callback(files),document.body.removeChild(fileInput),resolve(files)}.bind(this),config=Object.assign({},defaults,providedConfig),fileInput=document.createElement("input"),fileInput.setAttribute("type","file"),fileInput.addEventListener("change",changeHandler),config.multiple&&fileInput.setAttribute("multiple",!0),config.accept&&fileInput.setAttribute("accept",config.accept),clickEvent=document.createEvent("MouseEvents"),clickEvent.initEvent("click",!0,!0),clickEvent.synthetic=!0,document.body.appendChild(fileInput),fileInput.dispatchEvent(clickEvent)})}},new NgFileChooser}).service("$ngUploader",function($ngFileChooser){function Upload(conf){this.config={};var defaults={multipleFiles:!1,acceptFiles:null,url:null,additionalData:{},fileFieldName:"file",responseType:"json",headers:{},onSuccess:angular.noop,onError:angular.noop,onProgress:angular.noop};if(Object.assign(this.config,defaults,conf),null===this.config.url)throw new Error("Upload Endpoint url must be specified!");var successCallback=function(event){this.config.onSuccess(event)}.bind(this),errorCallback=function(event){this.config.onError(event)}.bind(this),progressCallback=function(event){this.config.onProgress(event)}.bind(this),openHandler=function(files){var xhr,formData,additionalData,fileFieldName,responseType,endpointUrl,requestHeaders;additionalData=this.config.additionalData,fileFieldName=this.config.fileFieldName,responseType=this.config.responseType,endpointUrl=this.config.url,requestHeaders=this.config.headers,formData=new FormData;for(var p in additionalData)additionalData.hasOwnProperty(p)&&formData.append(p,additionalData[p]);for(var i in files)files.hasOwnProperty(i)&&formData.append(fileFieldName,files[i]);xhr=new XMLHttpRequest,xhr.responseType=responseType,xhr.addEventListener("load",successCallback),xhr.addEventListener("error",errorCallback),xhr.upload.addEventListener("progress",progressCallback),xhr.open("POST",endpointUrl);for(var h in requestHeaders)requestHeaders.hasOwnProperty(h)&&xhr.setRequestHeader(h,requestHeaders[h]);xhr.send(formData)}.bind(this);$ngFileChooser.open({accept:this.config.acceptFiles,multiple:this.config.multipleFiles}).then(openHandler)}function NgUploader(){}return NgUploader.prototype.upload=function(config){return new Upload(config)},new NgUploader})}(angular);